var logger = require("appLog");
//var mongo = require("appDb/MongoDb");
var xml2js = require('xml2js');

Array.prototype.contains = function(key) {
    for(p in this)
        if(this[p] === key)
            return true;
    return false;
}

exports.refactArray = function(array) {
    array.pop();
    return array;
}


exports.sendResult = function (data, res) {
    try {
        res.jsonp(data);
        logger.app.info('reponse to client:'+JSON.stringify(data));
    } catch (e) {
        logger.app.error(e);
    }
}

exports.sendError = function (msg, res) {
    var result = {};
    result.success = false;
    result.message = msg;
    result.result = 500;
    try {
        res.jsonp(result);
        logger.app.info('reponse to client:'+JSON.stringify(result));
    } catch (e) {
        logger.app.error(e);
    }
}

exports.send403 = function (res) {
    var result = {};
    result.success = false;
    result.message = '403 Forbidden!';
    result.result = 403;
    try {
        res.jsonp(result);
        logger.app.info('reponse to client:'+JSON.stringify(result));
    } catch (e) {
        logger.app.error(e);
    }
}

exports.send500 = function (res) {
    var result = {};
    result.success = false;
    result.message = '500 bad request!';
    result.result = 500;
    try {
        res.jsonp(result);
        logger.app.info('reponse to client:'+JSON.stringify(result));
    } catch (e) {
        logger.app.error(e);
    }

}

exports.sessionTimeout = function (res) {
    logger.app.debug("401 your session is timeout,please login");
    var result = {};
    result.success = false;
    result.message = '401 your session is timeout,please login';
    result.result = 401;
    try {
        res.jsonp(result);
        logger.app.info('reponse to client:'+JSON.stringify(result));
    } catch (e) {
        logger.app.error(e);
    }
}


/**
 * copy src OBJ property to des OBJ expect the expect propertys
 * expect null or Array
 * @param des require
 * @param src require
 * @param expect  null or Array
 * @returns {*}
 */
exports.copyOjbData = function(des,src,expect){
    if(!expect)expect =[];
    if(expect instanceof Array){
        for(var p in src){
            if(!expect.contains(p))
                des[p]=src[p];
        }
    }else{
        return des;
    }
}

exports.getCurrentDateTime = function () {
    var date = new Date();
    return date.getTime();
}

exports.getCurrentDateTimeInt = function() {
    var date = new Date();
    return date.getTime()/1000;
}

exports.getCurrentDate = function () {
    var date = new Date();
    var year = date.getFullYear();
    var month = date.getMonth();
    var day = date.getDate();
    var hour = date.getHours();
    var minites = date.getMinutes();
    var second = date.getSeconds();
    month = month + 1 > 9 ? month + 1 : '0' + (month + 1);
    day = day > 9 ? day : '0' + day;
    hour = hour > 9 ? hour : '0' + hour;
    minites = minites > 9 ? minites : '0' + minites;
    second = second > 9 ? second : '0' + second;
    return year + "-" + month + "-" + day + " " + hour + ":" + minites + ":" + second;
}

/**
 * remove empty property and special propertys
 * special can be null or Array
 * @param obj
 * @returns {*}
 */
exports.removeEmptyProperty = function(obj,special){
    if(!obj)return;
    if(!special)special =[];
    if(special instanceof Array){
        for(var property in obj){
            var value = obj[property];
            if(!value || special.contains(property)){
                delete obj[property];
            }
        }
    }
    return obj;
}

exports.getSmsSendCount = function(str) {
    var length = str.length;
    return Math.ceil(length/65);
}

exports.setDateCondition = function(/*query object*/query) {
    var fields={};
    for(var k in query){
        if(k.indexOf("begin_date")!=-1 || k.indexOf("end_date")!=-1){
            fields[k.substring(0, k.indexOf("_"))]="1";
        }
    }
    for (var field in fields) {
        if(query[field+"_begin_date"] && query[field+"_end_date"]){
            query[field]={"$gte":query[field+"_begin_date"]+(!query[field+"_begin_time"]?"":" "+query[field+"_begin_time"]),
                "$lte":query[field+"_end_date"]+(!query[field+"_end_time"]?"":" "+query[field+"_end_time"])};
        }else if(query[field+"_begin_date"]){
            query[field]={"$gte":query[field+"_begin_date"]+(!query[field+"_begin_time"]?"":" "+query[field+"_begin_time"])}  ;
        }else if(query[field+"_end_date"]){
            query[field]={"$lte":query[field+"_end_date"]+(!query[field+"_end_time"]?"":" "+query[field+"_end_time"])} ;
        }
        delete  query[field+"_begin_date"];
        delete  query[field+"_end_date"];
        delete  query[field+"_begin_time"];
        delete  query[field+"_end_time"];
    }
}

exports.getXml = function(json) {
    var builder = new xml2js.Builder();
    var xml = builder.buildObject(json);
    return xml;
}

exports.DateTime = require('./DateTime');
exports.UUID = require('./UUID');
exports.ObjectUtil = require('./ObjectUtil');